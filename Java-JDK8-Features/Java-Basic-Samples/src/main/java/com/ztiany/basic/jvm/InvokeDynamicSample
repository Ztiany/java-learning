Classfile /D:/code/ztiany/Java-base-code/Java-JDK8-Features/Java-Basic-Samples/out/production/classes/com/ztiany/basic/jvm/InvokeDynamicSample.class
  Last modified 2024-11-14; size 2166 bytes
  MD5 checksum 7f9e89822eaf703572392a7d961dd3d5
  Compiled from "InvokeDynamicSample.java"
public class com.ztiany.basic.jvm.InvokeDynamicSample
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
    #1 = Methodref          #10.#43       // java/lang/Object."<init>":()V
    // 其中 `#0` 是一个特殊的查找，对应 BootstrapMethods 中的 0 行。
    #2 = InvokeDynamic      #0:#48        // #0:run:()Ljava/lang/Runnable;
    #3 = InterfaceMethodref #49.#50       // java/lang/Runnable.run:()V
    #4 = Class              #51           // com/ztiany/basic/jvm/InvokeDynamicSample
    #5 = Methodref          #4.#43        // com/ztiany/basic/jvm/InvokeDynamicSample."<init>":()V
    #6 = Methodref          #4.#52        // com/ztiany/basic/jvm/InvokeDynamicSample.lambda:()V
    #7 = String             #40           // lambda$lambda$0
    #8 = Class              #53           // java/lang/Class
    #9 = Methodref          #8.#54        // java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #10 = Class              #55           // java/lang/Object
   #11 = Methodref          #56.#57       // java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #12 = Class              #58           // java/lang/reflect/InvocationTargetException
   #13 = Class              #59           // java/lang/NoSuchMethodException
   #14 = Class              #60           // java/lang/IllegalAccessException
   #15 = Methodref          #61.#62       // java/util/logging/Logger.getGlobal:()Ljava/util/logging/Logger;
   #16 = Fieldref           #63.#64       // java/util/logging/Level.INFO:Ljava/util/logging/Level;
   #17 = String             #65           // InvokeDynamicSample
   #18 = Methodref          #61.#66       // java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #19 = Fieldref           #67.#68       // java/lang/System.out:Ljava/io/PrintStream;
   #20 = String             #69           // Hello World!
   #21 = Methodref          #70.#71       // java/io/PrintStream.println:(Ljava/lang/String;)V
   #22 = Utf8               <init>
   #23 = Utf8               ()V
   #24 = Utf8               Code
   #25 = Utf8               LineNumberTable
   #26 = Utf8               LocalVariableTable
   #27 = Utf8               this
   #28 = Utf8               Lcom/ztiany/basic/jvm/InvokeDynamicSample;
   #29 = Utf8               lambda
   #30 = Utf8               runnable
   #31 = Utf8               Ljava/lang/Runnable;
   #32 = Utf8               main
   #33 = Utf8               ([Ljava/lang/String;)V
   #34 = Utf8               e
   #35 = Utf8               Ljava/lang/ReflectiveOperationException;
   #36 = Utf8               args
   #37 = Utf8               [Ljava/lang/String;
   #38 = Utf8               StackMapTable
   #39 = Class              #72           // java/lang/ReflectiveOperationException
   #40 = Utf8               lambda$lambda$0
   #41 = Utf8               SourceFile
   #42 = Utf8               InvokeDynamicSample.java
   #43 = NameAndType        #22:#23       // "<init>":()V
   #44 = Utf8               BootstrapMethods
   #45 = MethodHandle       #6:#73        // invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #46 = MethodType         #23           //  ()V
   #47 = MethodHandle       #6:#74        // invokestatic com/ztiany/basic/jvm/InvokeDynamicSample.lambda$lambda$0:()V
   #48 = NameAndType        #75:#76       // run:()Ljava/lang/Runnable;
   #49 = Class              #77           // java/lang/Runnable
   #50 = NameAndType        #75:#23       // run:()V
   #51 = Utf8               com/ztiany/basic/jvm/InvokeDynamicSample
   #52 = NameAndType        #29:#23       // lambda:()V
   #53 = Utf8               java/lang/Class
   #54 = NameAndType        #78:#79       // getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #55 = Utf8               java/lang/Object
   #56 = Class              #80           // java/lang/reflect/Method
   #57 = NameAndType        #81:#82       // invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #58 = Utf8               java/lang/reflect/InvocationTargetException
   #59 = Utf8               java/lang/NoSuchMethodException
   #60 = Utf8               java/lang/IllegalAccessException
   #61 = Class              #83           // java/util/logging/Logger
   #62 = NameAndType        #84:#85       // getGlobal:()Ljava/util/logging/Logger;
   #63 = Class              #86           // java/util/logging/Level
   #64 = NameAndType        #87:#88       // INFO:Ljava/util/logging/Level;
   #65 = Utf8               InvokeDynamicSample
   #66 = NameAndType        #89:#90       // log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #67 = Class              #91           // java/lang/System
   #68 = NameAndType        #92:#93       // out:Ljava/io/PrintStream;
   #69 = Utf8               Hello World!
   #70 = Class              #94           // java/io/PrintStream
   #71 = NameAndType        #95:#96       // println:(Ljava/lang/String;)V
   #72 = Utf8               java/lang/ReflectiveOperationException
   #73 = Methodref          #97.#98       // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #74 = Methodref          #4.#99        // com/ztiany/basic/jvm/InvokeDynamicSample.lambda$lambda$0:()V
   #75 = Utf8               run
   #76 = Utf8               ()Ljava/lang/Runnable;
   #77 = Utf8               java/lang/Runnable
   #78 = Utf8               getDeclaredMethod
   #79 = Utf8               (Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
   #80 = Utf8               java/lang/reflect/Method
   #81 = Utf8               invoke
   #82 = Utf8               (Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
   #83 = Utf8               java/util/logging/Logger
   #84 = Utf8               getGlobal
   #85 = Utf8               ()Ljava/util/logging/Logger;
   #86 = Utf8               java/util/logging/Level
   #87 = Utf8               INFO
   #88 = Utf8               Ljava/util/logging/Level;
   #89 = Utf8               log
   #90 = Utf8               (Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
   #91 = Utf8               java/lang/System
   #92 = Utf8               out
   #93 = Utf8               Ljava/io/PrintStream;
   #94 = Utf8               java/io/PrintStream
   #95 = Utf8               println
   #96 = Utf8               (Ljava/lang/String;)V
   #97 = Class              #100          // java/lang/invoke/LambdaMetafactory
   #98 = NameAndType        #101:#105     // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
   #99 = NameAndType        #40:#23       // lambda$lambda$0:()V
  #100 = Utf8               java/lang/invoke/LambdaMetafactory
  #101 = Utf8               metafactory
  #102 = Class              #107          // java/lang/invoke/MethodHandles$Lookup
  #103 = Utf8               Lookup
  #104 = Utf8               InnerClasses
  #105 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #106 = Class              #108          // java/lang/invoke/MethodHandles
  #107 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #108 = Utf8               java/lang/invoke/MethodHandles
{
  public com.ztiany.basic.jvm.InvokeDynamicSample();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 13: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/ztiany/basic/jvm/InvokeDynamicSample;

  private void lambda();
    descriptor: ()V
    flags: ACC_PRIVATE
    Code:
      stack=1, locals=2, args_size=1
         0: invokedynamic #2,  0              // InvokeDynamic #0:run:()Ljava/lang/Runnable;
         5: astore_1
         6: aload_1
         7: invokeinterface #3,  1            // InterfaceMethod java/lang/Runnable.run:()V
        12: return
      LineNumberTable:
        line 16: 0
        line 17: 6
        line 18: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcom/ztiany/basic/jvm/InvokeDynamicSample;
            6       7     1 runnable   Ljava/lang/Runnable;

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=2, args_size=1
         0: new           #4                  // class com/ztiany/basic/jvm/InvokeDynamicSample
         3: dup
         4: invokespecial #5                  // Method "<init>":()V
         7: invokespecial #6                  // Method lambda:()V
        10: ldc           #4                  // class com/ztiany/basic/jvm/InvokeDynamicSample
        12: ldc           #7                  // String lambda$lambda$0
        14: iconst_0
        15: anewarray     #8                  // class java/lang/Class
        18: invokevirtual #9                  // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
        21: aconst_null
        22: iconst_0
        23: anewarray     #10                 // class java/lang/Object
        26: invokevirtual #11                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
        29: pop
        30: goto          46
        33: astore_1
        34: invokestatic  #15                 // Method java/util/logging/Logger.getGlobal:()Ljava/util/logging/Logger;
        37: getstatic     #16                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
        40: ldc           #17                 // String InvokeDynamicSample
        42: aload_1
        43: invokevirtual #18                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
        46: return
      Exception table:
         from    to  target type
            10    30    33   Class java/lang/reflect/InvocationTargetException
            10    30    33   Class java/lang/NoSuchMethodException
            10    30    33   Class java/lang/IllegalAccessException
      LineNumberTable:
        line 21: 0
        line 23: 10
        line 26: 30
        line 24: 33
        line 25: 34
        line 27: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           34      12     1     e   Ljava/lang/ReflectiveOperationException;
            0      47     0  args   [Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 97 /* same_locals_1_stack_item */
          stack = [ class java/lang/ReflectiveOperationException ]
        frame_type = 12 /* same */

  private static void lambda$lambda$0();
    descriptor: ()V
    flags: ACC_PRIVATE, ACC_STATIC, ACC_SYNTHETIC
    Code:
      stack=2, locals=0, args_size=0
         0: getstatic     #19                 // Field java/lang/System.out:Ljava/io/PrintStream;
         3: ldc           #20                 // String Hello World!
         5: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 16: 0
}
SourceFile: "InvokeDynamicSample.java"
InnerClasses:
     public static final #103= #102 of #106; //Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
BootstrapMethods:
  0: #45 invokestatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #46 ()V
      #47 invokestatic com/ztiany/basic/jvm/InvokeDynamicSample.lambda$lambda$0:()V
      #46 ()V
